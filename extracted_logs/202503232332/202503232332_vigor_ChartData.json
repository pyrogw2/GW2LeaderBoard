{
  "title": "202503232332_vigor_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Veil B\\u00f4t\", \"Ninja Tortoise\", \"Orion Of The Hunt\", \"Minnie Mew\", \"Hephyt Wolf\", \"Z Y A N\", \"Kat The Rat\", \"Psyche V\", \"Muted Girl\", \"S T E P M O M\", \"Elgar The Necro\", \"Illusionary Oinkies\", \"Degothi Everilde\", \"Time Turned Fragile\", \"Iobtesr\", \"O Divino\", \"Midosaki\", \"Tia Melusine\", \"Frozen Delirious\"];\r\nconst professions = [\"Chronomancer\", \"Druid\", \"Druid\", \"Druid\", \"Druid\", \"Tempest\", \"Scrapper\", \"Chronomancer\", \"Chronomancer\", \"Scourge\", \"Scourge\", \"Chronomancer\", \"Scrapper\", \"Chronomancer\", \"Chronomancer\", \"Warrior\", \"Scourge\", \"Tempest\", \"Scourge\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Vigor per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[0.0, 0.0, 0.0, 0.0, 30.78, 39.0432, 52.1088, 147.084, 35.358, 39.8315, 192.576], [0.0, 0.0, 31.0603, 0.0, 0.0, 3.8246, 0.0, 0.0, 20.7355, 0.0, 18.0274, 218.5319, 82.1833, 0.0, 0.0, 28.3528, 0.0, 0.0, 101.814, 35.67, 338.096], [0.6263, 4.9864, 0.0, 0.0, 0.0, 45.2582, 0.0, 0.0, 0.0, 56.9517, 37.4414, 240.1117, 0.0, 20.5139, 0.0, 55.2448, 16.974, 16.9332, 216.124, 75.7987, 114.24], [36.9541, 0.0, 0.0, 0.0, 0.0, 36.1747, 0.0, 0.0, 74.7183, 0.0, 61.0157, 0.0, 77.8865, 58.0306, 1.7784, 0.0, 0.0, 0.0, 187.156, 204.2108, 274.448], [0.0, 0.0, 30.0623, 0.0, 0.0, 20.3981, 16.9455, 0.0, 0.0, 15.3595, 128.965, 93.9406, 81.2587, 0.0, 0.0, 92.6944, 0.0, 76.3848, 217.97, 135.546, 190.4], [77.8208, 69.276, 231.75, 278.036, 582.9073, 353.056], [0.0, 0.0, 34.4523, 176.1984, 0.0, 38.8608, 110.1276, 82.644, 923.853, 577.184], [120.8731, 0.0, 83.6371, 254.976, 46.8039, 0.0, 73.2656, 55.692, 139.9046, 98.4968, 30.0233, 0.0, 28.1124, 123.6368, 77.2524, 137.5668, 255.742, 521.3765, 338.368], [25.9077, 13.45, 129.6672, 0.0, 100.1011, 189.9571, 23.1231, 0.0, 110.2381, 88.6431, 146.0678, 0.0, 39.8135, 28.5578, 144.666, 81.1408, 110.5656, 132.7464, 190.99, 482.1395, 419.696], [0.0, 0.0, 253.2222, 0.0, 48.2944, 221.351, 51.5658, 0.0, 86.2693, 91.936, 245.9117, 134.3251, 35.9518, 41.9642, 125.5824, 0.0, 96.9312, 316.5396, 206.184, 542.7785, 410.176], [157.8567, 66.2442, 317.0891, 0.0, 50.3798, 500.8685, 38.61, 0.0, 113.5418, 35.8462, 152.231, 0.0, 3.5897, 74.0544, 141.246, 112.216, 129.9408, 196.1532, 111.328, 414.3665, 309.536], [544.8518, 68.8974, 0.0, 114.1275, 88.7978, 243.7546, 17.6863, 78.1584, 46.1776, 184.1328, 66.2008, 37.5084, 300.966, 283.716, 646.816, 407.728], [19.4925, 65.2601, 230.0829, 0.0, 78.1491, 347.7235, 87.0441, 0.0, 67.455, 82.3667, 200.7662, 0.0, 129.6658, 50.0506, 111.15, 81.2072, 68.1444, 250.0428, 233.022, 992.5177, 526.32], [25.8887, 47.8078, 95.3014, 0.0, 40.0898, 298.6406, 30.5877, 0.0, 80.1072, 70.72, 310.163, 162.4078, 149.9532, 28.728, 76.0608, 157.7664, 74.6856, 204.1872, 447.584, 879.5628, 492.592], [64.923, 675.3677, 91.8489, 0.0, 156.2078, 124.5777, 302.459, 80.0234, 155.0115, 143.8954, 273.1896, 111.3528, 128.0916, 308.1348, 419.752, 1272.5272], [0.0, 211.6214, 0.0, 111.1594, 526.5254, 91.5915, 0.0, 92.1971, 69.2393, 298.7611, 93.6092, 153.271, 67.4789, 208.62, 196.3448, 103.4172, 253.998, 420.888, 973.4938, 644.64], [63.583, 115.736, 494.7812, 0.0, 140.6849, 827.2378, 60.5319, 0.0, 0.0, 0.0, 338.5138, 72.8992, 128.0884, 65.1806, 254.79, 166.8632, 146.3076, 263.1444, 487.912, 923.853, 618.256], [78.3115, 120.46, 185.1765, 0.0, 135.1146, 634.5715, 240.1971, 0.0, 169.1646, 157.9929, 415.7078, 111.2127, 177.6921, 137.5752, 229.4136, 325.8248, 144.1548, 402.0708, 89.318, 832.0028, 924.8], [116.0247, 123.1281, 366.5485, 33.2032, 126.5807, 551.545, 184.6845, 43.1779, 136.7141, 165.75, 485.9683, 137.5972, 44.2735, 90.1846, 301.0284, 104.5136, 112.1664, 530.3676, 435.088, 1408.3705, 1083.92]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}