{
  "title": "202503232332_receivedCrowdControlDuration_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Bask\\u00eat\", \"Havocus Imperator\", \"Smile Has Minion\", \"Iobtesr\", \"Peewee Stability\", \"Tingelings\", \"Too Huge\", \"Illusionary Oinkies\", \"Havocus Imperator\", \"King Modus\", \"Veil B\\u00f4t\", \"Z Y A N\", \"Zyn Wintergreen Six\", \"Flawed Jin\", \"Astro Bear\", \"Paralda\", \"B\\u00e4sk\\u00e9t\", \"Rainy Twilight\", \"Holly Penner\", \"Orion Of The Hunt\", \"Niffuries\", \"Time Turned Fragile\", \"Kat The Rat\", \"T A R Ancalim\\u00eb\", \"Candygram Cupid\", \"Onysc\", \"Tia Melusine\", \"Muted Girl\", \"Psyche V\", \"Fromfallen\", \"S T E P M O M\", \"Varda Grenths Hand\", \"Hephyt Wolf\", \"Neural Necro\", \"Interpretor\", \"Degothi Everilde\", \"Uncle Donk\", \"Ninja Tortoise\", \"Midosaki\", \"Elgar The Necro\", \"Persueas\", \"Minnie Mew\", \"O Divino\", \"Frozen Delirious\"];\r\nconst professions = [\"Berserker\", \"Firebrand\", \"Scourge\", \"Chronomancer\", \"Firebrand\", \"Chronomancer\", \"Dragonhunter\", \"Chronomancer\", \"Dragonhunter\", \"Firebrand\", \"Chronomancer\", \"Tempest\", \"Firebrand\", \"Firebrand\", \"Holosmith\", \"Firebrand\", \"Holosmith\", \"Holosmith\", \"Berserker\", \"Druid\", \"Firebrand\", \"Chronomancer\", \"Scrapper\", \"Dragonhunter\", \"Untamed\", \"Spellbreaker\", \"Tempest\", \"Chronomancer\", \"Chronomancer\", \"Spellbreaker\", \"Scourge\", \"Reaper\", \"Druid\", \"Reaper\", \"Warrior\", \"Scrapper\", \"Dragonhunter\", \"Druid\", \"Scourge\", \"Scourge\", \"Spellbreaker\", \"Druid\", \"Warrior\", \"Scourge\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Received Hard CC Duration per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[0.0, 743590.08, 62130.0, 244755.0, 65968.0, 376200.0], [0.0, 0.0, 0.0, 0.0, 0.0, 3346560.0], [125268.0, 146529.0, 155925.0, 0.0, 0.0, 2409523.2], [0.0, 398400.0, 64350.0, 0.0, 46860.0, 0.0, 555612.48, 0.0, 0.0, 0.0, 307800.0, 99600.0, 0.0, 556200.0, 213000.0, 3567000.0], [0.0, 0.0, 0.0, 0.0, 1112400.0, 0.0, 3002225.0, 4488000.0], [154080.0, 96094.4, 217560.0, 0.0, 68400.0, 111087.2, 0.0, 1236000.0, 213000.0, 2675250.0, 2339200.0], [0.0, 897196.8, 0.0, 0.0, 23430.0, 22100.0, 231120.0, 41420.0, 81585.0, 0.0, 102600.0, 365200.0, 0.0, 2039400.0, 355000.0, 445875.0, 1632000.0], [0.0, 42900.0, 0.0, 41002.5, 0.0, 169488.0, 62130.0, 81585.0, 0.0, 239400.0, 0.0, 27600.0, 741600.0, 0.0, 5082975.0, 3128000.0], [85800.0, 0.0, 0.0, 112113.3, 785808.0, 0.0, 0.0, 0.0, 102600.0, 99600.0, 0.0, 309000.0, 542440.0, 4220950.0, 2992000.0], [117676.0, 177147.0, 397546.38, 0.0, 0.0, 2200124.16, 454740.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2263040.0], [0.0, 0.0, 163170.0, 0.0, 513000.0, 172640.0, 0.0, 1359600.0, 0.0, 3216245.0, 5581440.0], [464800.0, 0.0, 679800.0, 0.0, 8144650.0, 5276800.0], [0.0, 0.0, 25773.0, 56863.3, 631728.0, 0.0, 135975.0, 0.0, 177840.0, 199200.0, 0.0, 123600.0, 213000.0, 7758225.0, 5603200.0], [85410.0, 32805.0, 748440.0, 38610.0, 0.0, 23430.0, 34763.3, 0.0, 62130.0, 407925.0, 0.0, 820800.0, 0.0, 0.0, 1050600.0, 0.0, 3329200.0, 1659200.0], [0.0, 34401.51, 405405.0, 0.0, 0.0, 1550572.8, 64350.0, 0.0, 0.0, 0.0, 616320.0, 96094.4, 81585.0, 0.0, 273600.0, 0.0, 0.0, 618000.0, 1704000.0, 4161500.0, 1855040.0], [0.0, 0.0, 0.0, 0.0, 0.0, 2262912.0, 42900.0, 0.0, 23430.0, 0.0, 0.0, 0.0, 54390.0, 0.0, 492480.0, 0.0, 0.0, 679800.0, 329440.0, 5201875.0, 5467200.0], [0.0, 0.0, 1545000.0, 497000.0, 10082720.0, 6337600.0], [865324.8, 300300.0, 0.0, 23430.0, 34763.3, 0.0, 0.0, 163170.0, 0.0, 273600.0, 172640.0, 30360.0, 1236000.0, 0.0, 5088920.0, 7322240.0], [0.0, 42900.0, 0.0, 0.0, 0.0, 1463760.0, 192188.8, 0.0, 21280.0, 0.0, 66400.0, 0.0, 1928160.0, 852000.0, 11027975.0, 1088000.0], [28470.0, 56862.0, 530145.0, 0.0, 109760.0, 1705152.0, 171600.0, 0.0, 0.0, 22100.0, 0.0, 0.0, 244755.0, 0.0, 273805.2, 298800.0, 0.0, 1483200.0, 0.0, 3002225.0, 3699200.0], [87308.0, 135003.51, 374220.0, 0.0, 0.0, 1441570.56, 107250.0, 0.0, 35145.0, 44200.0, 462240.0, 0.0, 0.0, 0.0, 363888.0, 272240.0, 0.0, 1297800.0, 0.0, 3002225.0, 4542400.0], [76375.52, 32805.0, 559646.01, 0.0, 87917.76, 2178929.28, 0.0, 0.0, 0.0, 79560.0, 0.0, 0.0, 81585.0, 0.0, 0.0, 199200.0, 27600.0, 927000.0, 0.0, 4488475.0, 5418240.0], [0.0, 326340.0, 0.0, 205200.0, 763600.0, 0.0, 2039400.0, 426000.0, 7312350.0, 5848000.0], [219522.68, 195080.4, 3458112.0, 0.0, 0.0, 84348.0, 22100.0, 0.0, 103550.0, 163170.0, 0.0, 164160.0, 232400.0, 0.0, 803400.0, 1181440.0, 2110475.0, 2393600.0], [31753.54, 121881.51, 654885.0, 0.0, 0.0, 956160.0, 146718.0, 0.0, 23430.0, 0.0, 724176.0, 96094.4, 163170.0, 0.0, 1046520.0, 66400.0, 0.0, 556200.0, 542440.0, 6093625.0, 2502400.0], [0.0, 43740.0, 1304780.4, 0.0, 359464.0, 4830520.32, 107250.0, 0.0, 25773.0, 0.0, 539280.0, 0.0, 0.0, 0.0, 746928.0, 172640.0, 146832.0, 309000.0, 0.0, 0.0, 0.0], [277430.66, 271034.91, 0.0, 0.0, 0.0, 1404280.32, 245388.0, 0.0, 0.0, 33150.0, 169488.0, 0.0, 217560.0, 0.0, 581400.0, 0.0, 30360.0, 1915800.0, 710000.0, 5950945.0, 1088000.0], [88484.76, 65610.0, 1471932.0, 0.0, 106878.8, 1083648.0, 150150.0, 0.0, 0.0, 0.0, 231120.0, 0.0, 163170.0, 0.0, 280440.0, 73040.0, 0.0, 1606800.0, 0.0, 4191225.0, 6098240.0], [505197.0, 0.0, 129077.76, 2058931.2, 0.0, 0.0, 35145.0, 101660.0, 0.0, 0.0, 244755.0, 0.0, 644328.0, 199200.0, 0.0, 1236000.0, 0.0, 9066125.0, 4983040.0], [232400.0, 0.0, 741600.0, 1607440.0, 13970750.0, 11837440.0], [56940.0, 0.0, 447380.01, 0.0, 68600.0, 494016.0, 0.0, 0.0, 23430.0, 143650.0, 231120.0, 0.0, 81585.0, 21280.0, 417240.0, 0.0, 105432.0, 2140752.0, 923000.0, 9488220.0, 5902400.0], [96798.0, 0.0, 611974.44, 0.0, 46757.76, 3026724.48, 206778.0, 0.0, 0.0, 108290.0, 847440.0, 0.0, 326340.0, 21280.0, 158688.0, 617520.0, 41400.0, 1359600.0, 284000.0, 4553870.0, 4961280.0], [85410.0, 0.0, 1097712.0, 0.0, 0.0, 3493171.2, 85800.0, 0.0, 0.0, 24310.0, 0.0, 0.0, 0.0, 0.0, 752400.0, 464800.0, 0.0, 1112400.0, 0.0, 6248195.0, 7643200.0], [56940.0, 44264.88, 1122660.0, 0.0, 150920.0, 1195200.0, 85800.0, 0.0, 46860.0, 0.0, 847440.0, 62130.0, 163170.0, 0.0, 1272240.0, 0.0, 0.0, 2298960.0, 795200.0, 5231600.0, 4167040.0], [39858.0, 0.0, 879417.0, 0.0, 27440.0, 4876416.0, 364650.0, 0.0, 35145.0, 0.0, 511545.6, 0.0, 163170.0, 0.0, 410400.0, 199200.0, 0.0, 1421400.0, 710000.0, 8204100.0, 5113600.0], [28470.0, 0.0, 0.0, 0.0, 27440.0, 876480.0, 1072500.0, 0.0, 0.0, 33150.0, 231120.0, 0.0, 0.0, 0.0, 280440.0, 564400.0, 220800.0, 1483200.0, 0.0, 15159750.0, 4760000.0], [314005.12, 32805.0, 1616630.4, 0.0, 0.0, 1627384.32, 0.0, 0.0, 0.0, 22100.0, 169488.0, 62130.0, 217560.0, 0.0, 615600.0, 298800.0, 0.0, 1001160.0, 710000.0, 9731965.0, 4950400.0], [115778.0, 0.0, 193347.0, 0.0, 46757.76, 5246131.2, 111540.0, 0.0, 0.0, 55250.0, 0.0, 62130.0, 163170.0, 0.0, 1326960.0, 0.0, 0.0, 1359600.0, 298200.0, 8204100.0, 10363200.0], [47450.0, 144342.0, 0.0, 0.0, 96040.0, 2760115.2, 0.0, 0.0, 0.0, 0.0, 693360.0, 0.0, 217560.0, 0.0, 1026000.0, 0.0, 0.0, 1050600.0, 968440.0, 13257350.0, 11451200.0], [47450.0, 177912.45, 629937.0, 0.0, 41160.0, 1848576.0, 64350.0, 0.0, 123007.5, 486200.0, 539280.0, 62130.0, 163170.0, 0.0, 718200.0, 172640.0, 82800.0, 1866360.0, 1349000.0, 8709425.0, 4052800.0], [0.0, 59573.88, 654885.0, 0.0, 41160.0, 4511800.32, 154440.0, 0.0, 70290.0, 110500.0, 462240.0, 41420.0, 0.0, 0.0, 0.0, 99600.0, 69000.0, 2657400.0, 2840000.0, 16301190.0, 3726400.0], [221553.54, 32805.0, 972972.0, 13500.0, 96040.0, 9928128.0, 197340.0, 0.0, 58575.0, 44200.0, 541128.96, 62130.0, 326340.0, 0.0, 622440.0, 0.0, 0.0, 123600.0, 0.0, 9161245.0, 6729280.0], [0.0, 893138.4, 0.0, 246960.0, 3393252.48, 248820.0, 0.0, 25773.0, 152490.0, 896745.6, 62130.0, 244755.0, 21280.0, 704520.0, 371840.0, 0.0, 2286600.0, 852000.0, 6331425.0, 14590080.0], [297986.0, 0.0, 1866110.4, 0.0, 31665.76, 1450176.0, 102960.0, 0.0, 46860.0, 66300.0, 1463760.0, 0.0, 54390.0, 49369.6, 684000.0, 1560400.0, 204792.0, 1668600.0, 542440.0, 10599935.0, 7322240.0]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}