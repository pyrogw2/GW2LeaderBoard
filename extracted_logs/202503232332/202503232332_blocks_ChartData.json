{
  "title": "202503232332_blocks_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Bask\\u00eat\", \"King Modus\", \"Havocus Imperator\", \"Z Y A N\", \"Veil B\\u00f4t\", \"Holly Penner\", \"Smile Has Minion\", \"B\\u00e4sk\\u00e9t\", \"Neural Necro\", \"Kat The Rat\", \"Peewee Stability\", \"Illusionary Oinkies\", \"Fromfallen\", \"Tingelings\", \"Iobtesr\", \"Psyche V\", \"Midosaki\", \"Tia Melusine\", \"Zyn Wintergreen Six\", \"Muted Girl\", \"Minnie Mew\", \"Flawed Jin\", \"Rainy Twilight\", \"Degothi Everilde\", \"Too Huge\", \"Elgar The Necro\", \"Orion Of The Hunt\", \"Astro Bear\", \"Onysc\", \"Ninja Tortoise\", \"Paralda\", \"S T E P M O M\", \"Varda Grenths Hand\", \"Candygram Cupid\", \"Time Turned Fragile\", \"Persueas\", \"Interpretor\", \"Hephyt Wolf\", \"Niffuries\", \"Havocus Imperator\", \"Frozen Delirious\", \"O Divino\", \"T A R Ancalim\\u00eb\", \"Uncle Donk\"];\r\nconst professions = [\"Berserker\", \"Firebrand\", \"Firebrand\", \"Tempest\", \"Chronomancer\", \"Berserker\", \"Scourge\", \"Holosmith\", \"Reaper\", \"Scrapper\", \"Firebrand\", \"Chronomancer\", \"Spellbreaker\", \"Chronomancer\", \"Chronomancer\", \"Chronomancer\", \"Scourge\", \"Tempest\", \"Firebrand\", \"Chronomancer\", \"Druid\", \"Firebrand\", \"Holosmith\", \"Scrapper\", \"Dragonhunter\", \"Scourge\", \"Druid\", \"Holosmith\", \"Spellbreaker\", \"Druid\", \"Firebrand\", \"Scourge\", \"Reaper\", \"Untamed\", \"Chronomancer\", \"Spellbreaker\", \"Warrior\", \"Druid\", \"Firebrand\", \"Dragonhunter\", \"Scourge\", \"Warrior\", \"Dragonhunter\", \"Dragonhunter\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Blocked Attacks per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[12, 30, 1, 3, 6, 16], [10, 9, 8, 0, 0, 45, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20], [0, 8, 32, 0, 11, 67], [5, 3, 15, 17, 54, 31], [1, 1, 4, 3, 22, 5, 5, 13, 16, 8, 50], [0, 6, 0, 8, 6, 20, 0, 6, 5, 11, 8, 5, 25, 5, 26, 5], [12, 7, 5, 0, 19, 93], [13, 7, 14, 7, 95, 28], [5, 8, 24, 0, 3, 14, 10, 0, 6, 6, 12, 0, 2, 2, 14, 5, 5, 19, 18, 7, 47], [0, 5, 6, 34, 0, 4, 16, 5, 76, 67], [2, 0, 9, 15, 27, 20, 108, 36], [53, 7, 0, 2, 8, 11, 0, 2, 4, 10, 1, 6, 15, 8, 56, 41], [9, 9, 18, 18, 86, 96], [18, 1, 2, 9, 38, 8, 9, 19, 24, 93, 40], [1, 51, 9, 0, 6, 6, 24, 0, 2, 3, 24, 6, 11, 14, 26, 81], [37, 0, 5, 51, 4, 0, 6, 9, 15, 0, 3, 2, 5, 6, 3, 17, 8, 49, 50], [9, 10, 23, 0, 7, 49, 6, 0, 0, 0, 18, 0, 2, 3, 19, 6, 10, 12, 16, 65, 39], [2, 6, 13, 0, 6, 56, 19, 0, 7, 9, 13, 0, 3, 6, 31, 7, 4, 14, 6, 63, 68], [0, 0, 9, 12, 24, 2, 5, 12, 38, 16, 6, 22, 20, 88, 82], [11, 10, 31, 1, 9, 19, 1, 0, 9, 8, 17, 1, 2, 1, 32, 10, 9, 16, 20, 82, 58], [7, 7, 31, 0, 20, 65, 4, 0, 6, 6, 16, 1, 5, 4, 21, 0, 0, 3, 25, 76, 57], [8, 9, 23, 13, 0, 9, 10, 21, 2, 4, 9, 25, 11, 12, 27, 28, 85, 71], [0, 2, 0, 9, 12, 19, 2, 4, 3, 50, 5, 6, 15, 44, 116, 94], [12, 7, 33, 1, 8, 53, 11, 0, 4, 23, 14, 0, 2, 4, 28, 8, 8, 22, 31, 63, 49], [10, 105, 37, 1, 33, 5, 31, 3, 5, 5, 23, 12, 11, 51, 40, 20, 8], [11, 7, 51, 0, 10, 95, 9, 0, 4, 8, 15, 2, 3, 5, 14, 5, 6, 22, 19, 84, 41], [6, 8, 20, 0, 3, 80, 14, 0, 8, 21, 11, 1, 6, 8, 28, 8, 8, 27, 23, 91, 44], [0, 9, 14, 0, 15, 51, 14, 0, 11, 16, 26, 1, 6, 8, 10, 15, 8, 27, 39, 90, 59], [15, 16, 62, 0, 12, 135, 14, 1, 11, 10, 24, 1, 5, 3, 36, 13, 13, 21, 33, 0, 0], [12, 8, 46, 0, 15, 66, 10, 0, 8, 5, 16, 0, 1, 3, 21, 6, 10, 23, 20, 79, 77], [0, 0, 0, 0, 0, 44, 18, 0, 11, 13, 43, 1, 2, 8, 30, 16, 11, 24, 21, 83, 107], [0, 0, 21, 0, 13, 47, 5, 0, 30, 25, 24, 2, 1, 3, 33, 0, 18, 24, 24, 111, 53], [6, 5, 27, 1, 8, 112, 15, 0, 16, 10, 34, 0, 8, 5, 0, 12, 8, 20, 29, 23, 112], [6, 6, 46, 0, 4, 67, 14, 0, 17, 14, 19, 1, 8, 9, 50, 13, 6, 29, 19, 114, 59], [14, 12, 21, 0, 9, 91, 19, 0, 8, 8, 15, 1, 5, 6, 27, 11, 16, 21, 32, 101, 91], [10, 8, 59, 0, 2, 140, 27, 0, 22, 16, 25, 0, 0, 0, 1, 22, 4, 16, 22, 138, 22], [13, 7, 41, 0, 7, 74, 5, 0, 17, 6, 23, 3, 4, 3, 58, 16, 6, 25, 29, 135, 68], [12, 0, 23, 0, 14, 111, 22, 0, 23, 13, 26, 2, 6, 8, 33, 7, 9, 30, 26, 113, 85], [12, 12, 49, 0, 9, 94, 21, 0, 13, 18, 26, 4, 5, 13, 44, 15, 4, 29, 34, 137, 88], [11, 0, 25, 15, 28, 2, 9, 3, 55, 34, 12, 38, 56, 184, 162], [10, 11, 31, 0, 12, 87, 21, 0, 36, 17, 62, 2, 6, 7, 33, 15, 14, 26, 49, 156, 153], [0, 65, 2, 11, 240, 44, 1, 58, 17, 33, 1, 9, 5, 18, 31, 9, 23, 33, 134, 165], [9, 28, 118, 27, 0, 27, 24, 69, 6, 4, 16, 37, 50, 19, 38, 55, 202, 177], [39, 26, 54, 1, 34, 143, 41, 1, 30, 35, 46, 5, 8, 18, 77, 33, 13, 43, 42, 205, 135]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}