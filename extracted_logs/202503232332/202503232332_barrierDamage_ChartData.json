{
  "title": "202503232332_barrierDamage_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Havocus Imperator\", \"King Modus\", \"Peewee Stability\", \"Bask\\u00eat\", \"Iobtesr\", \"Holly Penner\", \"Veil B\\u00f4t\", \"Smile Has Minion\", \"Flawed Jin\", \"Tia Melusine\", \"Havocus Imperator\", \"B\\u00e4sk\\u00e9t\", \"Zyn Wintergreen Six\", \"Too Huge\", \"Z Y A N\", \"Rainy Twilight\", \"Orion Of The Hunt\", \"Candygram Cupid\", \"Varda Grenths Hand\", \"Astro Bear\", \"Illusionary Oinkies\", \"Tingelings\", \"Kat The Rat\", \"Time Turned Fragile\", \"Fromfallen\", \"Muted Girl\", \"Paralda\", \"Psyche V\", \"T A R Ancalim\\u00eb\", \"Interpretor\", \"Onysc\", \"Niffuries\", \"Degothi Everilde\", \"Minnie Mew\", \"Persueas\", \"Ninja Tortoise\", \"Hephyt Wolf\", \"Uncle Donk\", \"Midosaki\", \"O Divino\", \"S T E P M O M\", \"Elgar The Necro\", \"Frozen Delirious\", \"Neural Necro\"];\r\nconst professions = [\"Firebrand\", \"Firebrand\", \"Firebrand\", \"Berserker\", \"Chronomancer\", \"Berserker\", \"Chronomancer\", \"Scourge\", \"Firebrand\", \"Tempest\", \"Dragonhunter\", \"Holosmith\", \"Firebrand\", \"Dragonhunter\", \"Tempest\", \"Holosmith\", \"Druid\", \"Untamed\", \"Reaper\", \"Holosmith\", \"Chronomancer\", \"Chronomancer\", \"Scrapper\", \"Chronomancer\", \"Spellbreaker\", \"Chronomancer\", \"Firebrand\", \"Chronomancer\", \"Dragonhunter\", \"Warrior\", \"Spellbreaker\", \"Firebrand\", \"Scrapper\", \"Druid\", \"Spellbreaker\", \"Druid\", \"Druid\", \"Dragonhunter\", \"Scourge\", \"Warrior\", \"Scourge\", \"Scourge\", \"Scourge\", \"Reaper\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Barrier Damage per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[0, 4473, 21112, 0, 12338, 40475], [11406, 7569, 3818, 0, 0, 20722, 15910, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 30511], [0, 0, 0, 2422, 12401, 8635, 61510, 25439], [10252, 52721, 0, 6893, 17853, 36907], [0, 28650, 7069, 0, 5199, 1917, 5971, 4061, 127, 3295, 29764, 6372, 10334, 25810, 12330, 65771], [0, 4700, 0, 6392, 578, 38897, 10447, 5836, 4051, 17031, 12102, 19691, 23938, 7127, 62642, 9315], [1557, 2298, 5922, 4513, 38264, 9864, 6238, 29002, 17588, 15908, 100750], [44943, 20566, 18952, 0, 18864, 141151], [10062, 9946, 18748, 10713, 0, 3623, 677, 6435, 0, 1290, 2541, 21753, 2388, 5525, 14761, 13724, 79998, 45602], [11653, 6144, 2533, 0, 311, 19905, 19536, 0, 3733, 7177, 16787, 0, 412, 4671, 9995, 2211, 4752, 10144, 4423, 73268, 50334], [11204, 0, 7300, 7340, 8973, 7187, 1112, 4232, 15944, 7873, 7584, 25493, 22615, 90927, 36428], [20673, 9251, 28858, 9103, 180575, 15788], [0, 0, 4008, 4235, 14687, 5227, 745, 2577, 58070, 8642, 9027, 15415, 9384, 97557, 61653], [2448, 74009, 122, 0, 8871, 4175, 12940, 0, 4358, 10681, 22887, 14127, 29144, 41824, 34034, 24547, 8794], [12568, 8560, 27478, 33223, 135136, 88521], [0, 5474, 0, 7643, 13234, 11284, 3031, 7255, 3723, 35706, 1062, 12526, 17128, 29643, 108378, 64092], [5054, 7316, 29469, 0, 12878, 53360, 8397, 0, 2346, 11223, 7509, 0, 562, 2921, 31033, 8433, 7358, 17692, 20661, 79729, 36658], [12372, 13756, 29089, 0, 14098, 26197, 11231, 0, 9653, 12454, 21471, 4178, 4141, 3225, 28532, 11042, 10529, 17770, 25028, 94344, 27245], [8531, 81, 23480, 0, 14709, 93775, 8729, 0, 14154, 13221, 13896, 4349, 1933, 11651, 0, 15555, 21958, 23214, 20997, 23198, 79550], [0, 8518, 24538, 0, 32104, 43725, 8338, 0, 10546, 6947, 8608, 13108, 2767, 6077, 4185, 5761, 4251, 31245, 30397, 101938, 63634], [49335, 14942, 0, 1683, 5005, 15802, 0, 1763, 2462, 23934, 9948, 12628, 33396, 30311, 141503, 73937], [23939, 3982, 8595, 5015, 57165, 4424, 15965, 39363, 22834, 171644, 75120], [0, 10047, 2380, 49416, 0, 8048, 40408, 6747, 206013, 106667], [8903, 6873, 26705, 0, 10602, 49282, 14762, 0, 0, 9231, 6846, 0, 4990, 6325, 33434, 3081, 17856, 34476, 33523, 98177, 71779], [18047, 16741, 38310, 42954, 201435, 155835], [28641, 24233, 62278, 0, 14000, 58499, 7059, 0, 5079, 10066, 15632, 0, 3826, 7129, 31526, 10014, 3121, 18003, 10936, 104847, 71422], [0, 0, 0, 0, 0, 47452, 4705, 0, 9966, 5241, 19400, 510, 2861, 7168, 54146, 4346, 20729, 34801, 30069, 135185, 141736], [47689, 0, 11392, 76215, 18602, 0, 7437, 33978, 35512, 0, 2502, 11412, 14715, 11287, 15019, 21539, 15336, 134613, 79406], [20842, 25987, 107514, 2968, 0, 9857, 9611, 21879, 3134, 6238, 11896, 21441, 16398, 18810, 22440, 39050, 136218, 83808], [31177, 5333, 77943, 0, 20611, 116667, 7237, 0, 23922, 2658, 14150, 0, 993, 4366, 27642, 2015, 6252, 11199, 16896, 132623, 64351], [10140, 30502, 69322, 0, 38326, 170176, 13495, 0, 14860, 5524, 32107, 5890, 8529, 2550, 67711, 18362, 31210, 35797, 23634, 0, 0], [24208, 20790, 48198, 0, 16123, 60084, 10944, 0, 6208, 12506, 23033, 13049, 0, 8853, 29923, 9873, 8800, 26466, 18891, 160387, 96037], [21698, 11568, 34876, 0, 22410, 65691, 30968, 0, 3277, 5487, 24013, 5921, 7402, 13954, 42095, 23761, 25143, 37158, 21584, 127745, 79706], [22383, 23659, 52791, 0, 32791, 151172, 6079, 0, 7002, 10234, 18330, 0, 3623, 5097, 34297, 0, 0, 14798, 28666, 113194, 107459], [9939, 13880, 61966, 0, 1136, 120731, 12445, 0, 11046, 18586, 51775, 4563, 0, 0, 0, 15721, 9473, 42464, 39989, 177313, 65031], [22698, 21672, 40463, 0, 29560, 121718, 16217, 0, 10438, 13266, 19803, 31, 235, 8266, 35180, 11011, 10938, 28483, 11011, 137585, 118255], [19657, 0, 63641, 0, 26225, 92214, 26968, 0, 18609, 21769, 19055, 5754, 771, 16531, 30696, 11286, 10050, 30582, 25486, 131918, 118651], [28178, 17171, 41553, 0, 33479, 61452, 19198, 0, 17720, 19596, 37423, 4212, 3065, 11388, 45752, 16805, 8506, 34083, 16137, 152764, 121231], [13674, 29497, 53855, 0, 16716, 118451, 16657, 0, 0, 0, 30678, 1404, 1656, 10924, 50054, 9983, 13832, 42693, 29987, 162429, 117869], [0, 43010, 438, 21952, 111506, 28250, 3161, 18348, 26357, 47488, 1211, 4341, 11313, 41790, 22320, 10964, 39059, 39177, 188755, 132814], [3557, 0, 37566, 0, 24013, 50819, 4597, 0, 27378, 18622, 32831, 3933, 13097, 9224, 64110, 0, 22913, 66122, 31500, 224728, 174109], [27114, 19221, 61732, 0, 34240, 158377, 21937, 0, 17749, 35280, 50582, 2575, 5777, 11327, 34422, 15365, 12533, 37279, 29364, 181043, 106434], [43137, 18348, 84669, 0, 19966, 62267, 21685, 0, 33300, 28350, 55360, 4456, 175, 18540, 37845, 30075, 24521, 55070, 54241, 248743, 183612], [48592, 26694, 167087, 0, 74332, 41716, 46142, 0, 12238, 40694, 82745, 20629, 7021, 24812, 170093, 23040, 36312, 162507, 126846, 146128, 283015]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}