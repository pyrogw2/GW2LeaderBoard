{
  "title": "202503232332_Cdmg_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Tia Melusine\", \"Neural Necro\", \"Degothi Everilde\", \"Flawed Jin\", \"O Divino\", \"Candygram Cupid\", \"Varda Grenths Hand\", \"King Modus\", \"Havocus Imperator\", \"Peewee Stability\", \"Zyn Wintergreen Six\", \"Holly Penner\", \"Niffuries\", \"Interpretor\", \"Smile Has Minion\", \"Too Huge\", \"Havocus Imperator\", \"Paralda\", \"T A R Ancalim\\u00eb\", \"Rainy Twilight\", \"Elgar The Necro\", \"Frozen Delirious\", \"Uncle Donk\", \"S T E P M O M\", \"Midosaki\", \"Astro Bear\"];\r\nconst professions = [\"Tempest\", \"Reaper\", \"Scrapper\", \"Firebrand\", \"Warrior\", \"Untamed\", \"Reaper\", \"Firebrand\", \"Dragonhunter\", \"Firebrand\", \"Firebrand\", \"Berserker\", \"Firebrand\", \"Warrior\", \"Scourge\", \"Dragonhunter\", \"Firebrand\", \"Firebrand\", \"Dragonhunter\", \"Holosmith\", \"Scourge\", \"Scourge\", \"Dragonhunter\", \"Scourge\", \"Scourge\", \"Holosmith\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Condi Damage per Second for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[40.2877, 12.1975, 0.6017, 0.0, 0.0, 42.4277, 1.9846, 0.0, 0.5775, 76.2923, 8.3201, 1.2477, 9.1837, 3.0714, 14.7778, 7.5, 7.3478, 2.0841, 5.7211, 6.3931, 6.3529], [44.3014, 36.1852, 37.8052, 0.0, 6.3061, 10.7932, 12.9154, 0.0, 34.0563, 42.2462, 14.3201, 0.0, 0.5578, 3.0357, 25.4333, 20.2108, 11.4928, 11.2395, 9.5014, 7.3917, 6.4691], [8.8904, 11.5679, 37.1255, 0.0, 7.0714, 32.8695, 25.4769, 0.0, 70.7042, 54.2462, 1.5654, 0.0, 2.8367, 3.8929, 22.0167, 13.5, 12.3623, 10.6375, 6.093, 2.731, 7.6765], [16.8767, 75.2222, 27.1905, 8.2846, 0.0, 57.493, 95.8769, 9.2547, 1.9174, 12.9116, 3.7143, 19.1278, 21.0361, 36.9565, 21.6278, 5.8451, 9.08, 11.1868], [0.0, 1.4978, 13.2, 0.0, 62.1988, 16.5923, 0.0, 14.7324, 156.7231, 3.7991, 11.0275, 6.7891, 0.0, 19.9056, 19.9337, 41.6377, 8.3851, 3.4676, 4.1048, 3.1309], [13.589, 24.9383, 30.9481, 0.0, 70.7755, 21.494, 12.0462, 0.0, 40.0845, 85.8615, 10.4907, 1.4679, 5.9728, 12.9286, 14.0889, 14.8855, 17.4058, 17.1942, 8.3944, 4.4179, 11.2265], [49.863, 36.0, 41.5065, 0.0, 38.6837, 55.6426, 10.7615, 0.0, 62.3803, 82.6769, 6.8435, 0.0917, 1.8367, 37.125, 0.0, 8.3795, 27.971, 4.6408, 13.2986, 4.0607, 14.5118], [169.0685, 170.8395, 3.5887, 0.0, 0.0, 110.498, 21.0077, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 2.4397], [21.3615, 0.0, 60.5775, 167.8, 18.757, 2.0092, 4.551, 10.1071, 67.1889, 24.1386, 101.0725, 18.5307, 25.9831, 15.9917, 26.9368], [0.0, 0.0, 41.6205, 135.7681, 62.4951, 40.538, 28.0593, 46.2971], [0.0, 0.0, 128.5352, 133.8923, 22.2196, 1.3761, 19.4762, 7.4286, 87.1889, 22.9398, 94.5797, 25.2977, 26.9634, 12.8634, 35.7074], [0.0, 36.0231, 0.0, 159.5352, 203.4615, 28.8762, 0.8991, 24.4966, 77.7321, 53.4333, 56.8373, 81.5072, 37.4919, 4.9549, 37.3034, 4.3426], [28.9315, 74.7654, 55.8355, 0.0, 37.9184, 64.2831, 15.6462, 0.0, 48.8732, 97.0154, 9.0187, 0.0, 10.2245, 0.0, 68.9111, 39.1627, 34.3913, 20.6667, 11.6704, 4.1614, 13.6603], [67.0, 25.1975, 87.6017, 2.12, 53.8571, 74.5402, 3.7385, 0.0, 54.6197, 79.8615, 6.6636, 8.844, 13.4626, 21.5893, 25.1722, 15.8675, 43.8406, 14.2136, 17.693, 9.7876, 11.7309], [229.9726, 229.6173, 2.329, 0.0, 144.6735, 155.4558], [89.4184, 105.5703, 5.1692, 0.0, 88.6197, 7.1538, 28.1963, 3.1284, 9.4354, 46.5893, 33.4056, 42.7651, 61.9275, 42.534, 25.8901, 11.4731, 3.5176], [0.0, 133.0247, 234.316, 18.72, 182.7041, 187.2912], [0.0, 0.0, 0.0, 0.0, 0.0, 58.002, 22.6154, 0.0, 213.493, 198.2769, 36.0561, 3.7156, 30.1701, 7.1964, 65.9278, 67.8072, 130.9275, 30.4693, 44.9887, 21.8993, 47.5015], [153.0959, 40.4815, 132.1145, 20.5231, 5.7222, 109.4507, 155.4769, 42.6916, 3.1284, 38.2449, 63.75, 50.6722, 66.2831, 142.8841, 46.5825, 29.7042, 25.731, 54.95], [0.0, 41.8462, 0.0, 155.4789, 233.4154, 45.1612, 0.367, 15.898, 17.9286, 141.6444, 99.0181, 210.2029, 54.945, 52.031, 41.8593, 93.6809], [205.8904, 99.037, 143.6537, 0.0, 96.898, 101.996, 49.9538, 0.0, 66.0141, 111.0615, 14.6869, 0.0, 2.4218, 30.3929, 40.2444, 50.0181, 216.029, 52.178, 22.9831, 45.2938, 30.1603], [231.0822, 88.1605, 159.3983, 0.0, 124.6224, 95.253, 39.0154, 0.0, 36.831, 201.5077, 20.993, 1.8257, 0.0, 34.2143, 68.7111, 48.0542, 87.942, 61.7087, 27.6, 20.1421, 55.1309], [230.7534, 89.6667, 303.7532, 0.0, 163.8673, 122.3534, 69.8077, 0.0, 105.6197, 139.2154, 22.243, 10.2661, 19.1293, 20.3393, 88.8111, 29.4759, 80.5652, 20.9773, 25.3521, 19.3145, 38.4926], [0.0, 0.0, 118.2338, 0.0, 200.9796, 121.9357, 26.4846, 0.0, 138.831, 420.0615, 43.3879, 0.0, 54.415, 22.6786, 131.1, 0.0, 68.1594, 80.0647, 58.431, 30.9379, 53.5926], [104.4247, 148.9383, 195.974, 0.0, 126.8367, 137.7209, 64.1769, 0.0, 0.0, 0.0, 41.1005, 0.7156, 4.8095, 31.5, 128.0778, 42.2892, 302.8406, 66.0453, 29.5465, 29.0759, 63.5809], [0.0, 376.1605, 179.1429, 111.32, 495.7755, 456.3253, 458.4, 0.0, 472.9155, 717.0769, 162.8995, 0.3486, 40.7551, 287.1071, 7.1111, 267.1265, 57.058, 359.7411, 271.8873, 142.0552, 104.2265]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}