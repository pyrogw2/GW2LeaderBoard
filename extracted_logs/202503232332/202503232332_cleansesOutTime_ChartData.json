{
  "title": "202503232332_cleansesOutTime_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Uncle Donk\", \"Too Huge\", \"Varda Grenths Hand\", \"Fromfallen\", \"Neural Necro\", \"Flawed Jin\", \"Astro Bear\", \"Persueas\", \"Rainy Twilight\", \"Peewee Stability\", \"Havocus Imperator\", \"Iobtesr\", \"Zyn Wintergreen Six\", \"Paralda\", \"Interpretor\", \"T A R Ancalim\\u00eb\", \"Onysc\", \"Niffuries\", \"Veil B\\u00f4t\", \"Elgar The Necro\", \"S T E P M O M\", \"Tingelings\", \"O Divino\", \"Kat The Rat\", \"Frozen Delirious\", \"Z Y A N\", \"Midosaki\", \"Tia Melusine\", \"Time Turned Fragile\", \"Minnie Mew\", \"Psyche V\", \"Muted Girl\", \"Orion Of The Hunt\", \"Hephyt Wolf\", \"Ninja Tortoise\", \"Illusionary Oinkies\", \"Degothi Everilde\"];\r\nconst professions = [\"Dragonhunter\", \"Dragonhunter\", \"Reaper\", \"Spellbreaker\", \"Reaper\", \"Firebrand\", \"Holosmith\", \"Spellbreaker\", \"Holosmith\", \"Firebrand\", \"Dragonhunter\", \"Chronomancer\", \"Firebrand\", \"Firebrand\", \"Warrior\", \"Dragonhunter\", \"Spellbreaker\", \"Firebrand\", \"Chronomancer\", \"Scourge\", \"Scourge\", \"Chronomancer\", \"Warrior\", \"Scrapper\", \"Scourge\", \"Tempest\", \"Scourge\", \"Tempest\", \"Chronomancer\", \"Druid\", \"Chronomancer\", \"Chronomancer\", \"Druid\", \"Druid\", \"Druid\", \"Chronomancer\", \"Scrapper\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Duration of Conditions Cleansed per Second for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[9.0137, 13.037, 0.0, 0.0, 1.9898, 18.0341, 0.0, 0.0, 9.9296, 8.9538, 6.993, 0.0, 0.0, 2.9643, 4.0056, 5.006, 7.0, 16.0129, 8.0, 29.0041, 17.0221], [0.0, 44.1004, 4.0077, 0.0, 3.9718, 0.0, 29.0304, 0.0, 2.0, 0.0, 13.0222, 0.0, 4.0, 12.0065, 24.031, 5.9986, 5.0029], [0.0, 12.037, 0.0, 0.0, 0.0, 30.0141, 0.0, 0.0, 0.9859, 7.9538, 19.0304, 0.0, 6.0136, 0.0, 0.0, 0.0, 0.0, 5.0032, 10.0, 7.9986, 34.0235], [4.006, 13.1449, 4.0, 6.0, 58.2897, 27.0544], [0.0, 0.0, 36.5065, 0.0, 18.949, 12.002, 17.5846, 0.0, 1.9859, 6.1385, 17.9883, 0.0, 1.0, 0.0, 22.1056, 2.0, 0.0, 11.0065, 15.0563, 10.9986, 27.0176], [4.0, 7.0247, 12.9957, 9.0231, 0.0, 6.9437, 7.9538, 13.9883, 0.0, 0.0, 1.9821, 18.0444, 8.012, 9.0, 10.0065, 18.0028, 42.0772, 38.0853], [0.0, 0.0, 1.9957, 0.0, 0.0, 11.002, 0.0, 0.0, 0.9859, 2.9846, 16.0164, 3.9817, 3.0068, 6.9464, 1.0, 16.0904, 2.0, 4.0, 4.0, 73.1876, 36.0353], [19.0959, 13.037, 59.8874, 0.0, 0.0, 88.492, 6.0154, 0.0, 6.9437, 3.9692, 5.0, 0.0, 0.0, 0.0, 0.0, 0.0, 5.0, 6.0032, 6.0, 30.0952, 11.0074], [0.0, 0.0, 0.0, 0.9859, 22.8154, 14.9883, 0.0, 0.0, 0.0, 51.1278, 5.006, 16.0145, 5.0032, 21.0, 80.189, 42.0971], [0.0, 0.0, 18.0422, 17.0145, 38.1294, 9.0, 78.1531, 64.1029], [3.0077, 0.0, 9.9577, 10.9538, 18.986, 7.9725, 1.0, 4.9464, 27.0444, 9.0181, 16.0145, 14.0097, 49.0085, 58.0359, 59.225], [2.9898, 84.7189, 12.0308, 0.0, 8.9437, 19.9077, 42.0584, 4.9817, 7.0204, 4.9464, 30.0833, 9.0181, 6.0, 17.0129, 58.0225, 124.3186], [0.0, 0.0, 18.8732, 36.9077, 22.986, 8.9725, 4.0068, 3.9643, 46.3944, 21.0542, 13.0145, 25.0194, 29.0, 107.2593, 97.6941], [0.0, 0.0, 0.0, 0.0, 0.0, 44.0964, 18.0462, 0.0, 6.9437, 12.9385, 36.0093, 2.9908, 0.0, 0.0, 62.6278, 17.0361, 15.0145, 26.0453, 24.0225, 100.3959, 85.2029], [29.6301, 4.0123, 23.1126, 0.0, 6.9796, 83.1446, 2.0, 0.9444, 14.4225, 2.9846, 26.979, 7.9725, 4.0068, 16.0, 35.4611, 9.0181, 15.058, 10.0129, 7.0, 87.1738, 91.3368], [10.0274, 3.0, 96.3434, 6.0154, 0.0, 6.9437, 18.9231, 37.9743, 5.9817, 3.0068, 3.9643, 18.0778, 10.0783, 13.058, 22.0388, 69.431, 87.1559, 65.1544], [39.5616, 43.3086, 87.0823, 0.0, 40.0612, 170.1747, 26.2077, 0.0, 36.8169, 47.8923, 88.3528, 2.9908, 5.0136, 15.875, 76.3389, 45.1506, 39.2609, 57.1424, 61.2817, 0.0, 0.0], [28.6438, 25.5679, 62.684, 0.0, 21.1633, 141.6305, 13.0385, 0.0, 25.8451, 21.9077, 38.0093, 0.0, 9.0272, 18.8393, 58.2611, 15.0301, 23.029, 32.11, 25.0, 101.6207, 85.6956], [0.9977, 7.9725, 15.0476, 4.9464, 63.6, 42.1867, 15.0145, 140.9612, 111.7127, 32.9959, 244.6441], [72.6575, 34.2716, 85.5368, 0.0, 24.3776, 138.7851, 36.3462, 0.0, 18.9577, 30.0, 53.1939, 0.0, 3.0068, 27.75, 45.1833, 43.1627, 32.1884, 58.4563, 26.0225, 144.9848, 100.8368], [6.0137, 0.0, 90.7056, 0.0, 35.1633, 102.5884, 3.0077, 0.0, 36.0563, 46.2462, 62.2453, 2.0367, 4.0068, 18.5714, 27.8722, 0.0, 44.3333, 88.8608, 36.0901, 133.7379, 142.5868], [69.1098, 21.2661, 17.068, 12.9643, 74.5111, 31.1024, 51.3188, 89.7476, 85.2169, 242.6097, 170.1382], [0.0, 104.8009, 0.0, 33.9592, 161.494, 46.1538, 0.0, 36.0563, 49.2154, 82.1238, 7.9725, 9.0272, 23.8929, 85.8667, 23.1265, 43.5362, 71.657, 61.0761, 175.1614, 158.4397], [0.0, 32.8231, 45.125, 156.7556, 0.0, 68.1304, 118.6796, 30.107, 312.7559, 236.4118], [79.411, 47.2469, 122.9264, 0.0, 47.7551, 75.7209, 52.5769, 0.0, 45.493, 51.2154, 71.5794, 20.1101, 4.0068, 15.3393, 87.0889, 33.0904, 26.2609, 87.5987, 85.2254, 214.8483, 208.6824], [91.7289, 85.3188, 163.0583, 154.3662, 326.7531, 261.9721], [81.726, 72.6914, 125.9913, 0.0, 68.5714, 204.0602, 53.6154, 0.0, 0.0, 0.0, 81.243, 9.9725, 20.1224, 29.1786, 115.5333, 70.4337, 36.971, 89.644, 69.5662, 197.6386, 178.775], [46.6849, 72.2346, 126.2684, 0.0, 26.949, 202.5341, 72.8846, 0.0, 34.8592, 90.3538, 107.9439, 8.1009, 13.034, 24.8036, 81.5889, 103.3916, 59.2754, 116.8997, 17.3634, 198.1379, 235.0574], [62.0, 56.4321, 166.8831, 1.96, 74.0102, 213.01, 48.8846, 0.0, 41.4507, 68.1538, 88.4206, 23.156, 19.068, 21.9107, 54.8667, 48.1506, 41.3768, 95.5502, 86.1577, 225.1752, 262.375], [47.4384, 31.2099, 150.0519, 0.0, 96.3061, 230.5502, 66.4692, 0.0, 51.1549, 96.3538, 123.3294, 0.0, 26.2177, 39.5536, 146.1389, 0.0, 0.0, 29.0324, 96.1775, 253.0952, 218.4632], [157.1558, 0.0, 73.6327, 199.3233, 46.3, 0.0, 60.4085, 91.5846, 104.486, 11.9633, 22.2925, 12.8929, 69.4333, 46.5723, 65.3188, 89.6375, 83.2141, 278.6566, 251.9603], [96.7397, 75.716, 153.7749, 0.0, 85.3163, 175.4739, 55.2, 0.0, 80.9014, 91.5077, 126.0701, 11.9633, 18.0952, 21.8929, 125.2444, 78.4398, 60.4348, 102.7023, 117.1915, 268.5228, 228.5324], [78.9178, 85.2222, 168.5195, 0.0, 74.8163, 246.9538, 68.3846, 0.0, 83.0986, 89.4923, 122.4369, 0.0, 21.068, 23.8929, 157.9111, 86.3855, 68.2754, 130.8932, 112.5775, 259.411, 213.3397], [89.5205, 0.0, 160.7056, 0.0, 63.0102, 254.7811, 84.1846, 0.0, 71.5634, 94.6923, 132.5257, 14.9541, 36.2313, 58.875, 160.55, 81.8916, 72.0725, 138.3269, 125.893, 284.5421, 287.1382], [92.2329, 69.8395, 187.4199, 0.0, 106.3776, 275.8554, 89.1923, 0.0, 92.5493, 131.1538, 150.9065, 2.9908, 27.7891, 66.6964, 153.9444, 109.4518, 120.3333, 152.0939, 150.1014, 294.5669, 281.1103], [284.4357, 129.0308, 0.0, 113.7465, 118.6923, 174.1799, 14.055, 46.2857, 66.7857, 156.8556, 103.4157, 88.2174, 195.7605, 160.031, 334.0538, 311.2529], [98.9589, 114.7901, 196.4675, 0.0, 102.0612, 283.0904, 118.3538, 0.9444, 89.0141, 123.3692, 188.0584, 12.055, 46.8571, 73.375, 203.7389, 76.6867, 91.5507, 174.1165, 164.1775, 353.1228, 332.7015]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}