{
  "title": "202503232332_evades_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Bask\\u00eat\", \"B\\u00e4sk\\u00e9t\", \"Havocus Imperator\", \"S T E P M O M\", \"Kat The Rat\", \"King Modus\", \"Smile Has Minion\", \"Z Y A N\", \"Peewee Stability\", \"Zyn Wintergreen Six\", \"Veil B\\u00f4t\", \"Flawed Jin\", \"Illusionary Oinkies\", \"Havocus Imperator\", \"Paralda\", \"Degothi Everilde\", \"Tingelings\", \"Too Huge\", \"Interpretor\", \"Rainy Twilight\", \"Elgar The Necro\", \"Holly Penner\", \"T A R Ancalim\\u00eb\", \"Midosaki\", \"Iobtesr\", \"Minnie Mew\", \"Ninja Tortoise\", \"Psyche V\", \"Tia Melusine\", \"Neural Necro\", \"Muted Girl\", \"Orion Of The Hunt\", \"O Divino\", \"Astro Bear\", \"Varda Grenths Hand\", \"Hephyt Wolf\", \"Frozen Delirious\", \"Time Turned Fragile\", \"Fromfallen\", \"Candygram Cupid\", \"Uncle Donk\", \"Niffuries\", \"Onysc\", \"Persueas\"];\r\nconst professions = [\"Berserker\", \"Holosmith\", \"Firebrand\", \"Scourge\", \"Scrapper\", \"Firebrand\", \"Scourge\", \"Tempest\", \"Firebrand\", \"Firebrand\", \"Chronomancer\", \"Firebrand\", \"Chronomancer\", \"Dragonhunter\", \"Firebrand\", \"Scrapper\", \"Chronomancer\", \"Dragonhunter\", \"Warrior\", \"Holosmith\", \"Scourge\", \"Berserker\", \"Dragonhunter\", \"Scourge\", \"Chronomancer\", \"Druid\", \"Druid\", \"Chronomancer\", \"Tempest\", \"Reaper\", \"Chronomancer\", \"Druid\", \"Warrior\", \"Holosmith\", \"Reaper\", \"Druid\", \"Scourge\", \"Chronomancer\", \"Spellbreaker\", \"Untamed\", \"Dragonhunter\", \"Firebrand\", \"Spellbreaker\", \"Spellbreaker\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Evaded Attacks per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[3, 26, 0, 0, 4, 51], [21, 9, 13, 1, 61, 14], [0, 13, 45, 0, 4, 79], [13, 0, 16, 0, 1, 3, 11, 0, 1, 0, 4, 0, 0, 0, 34, 0, 0, 7, 13, 20, 26], [0, 0, 2, 26, 4, 2, 5, 0, 35, 92], [15, 28, 4, 0, 0, 55, 54, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 13], [51, 7, 9, 0, 20, 102], [5, 2, 5, 3, 94, 86], [0, 2, 27, 24, 10, 10, 63, 63], [0, 0, 0, 0, 8, 0, 0, 2, 41, 5, 9, 3, 8, 42, 88], [2, 0, 2, 0, 50, 14, 29, 4, 11, 4, 113], [4, 19, 15, 6, 0, 1, 2, 12, 0, 0, 0, 48, 5, 6, 8, 20, 12, 79], [57, 15, 0, 7, 15, 5, 0, 0, 0, 26, 1, 1, 9, 3, 46, 68], [33, 0, 24, 21, 7, 0, 2, 0, 12, 2, 12, 8, 34, 47, 55], [0, 0, 0, 0, 0, 24, 2, 0, 0, 0, 2, 0, 0, 0, 50, 3, 8, 17, 33, 13, 112], [1, 0, 32, 0, 6, 33, 58, 0, 0, 2, 1, 0, 0, 0, 11, 0, 9, 12, 6, 57, 57], [35, 0, 1, 1, 33, 8, 11, 26, 17, 87, 71], [1, 114, 2, 0, 4, 4, 13, 1, 2, 0, 22, 15, 27, 38, 33, 16, 5], [21, 19, 31, 0, 5, 37, 2, 0, 0, 0, 2, 0, 0, 2, 51, 2, 0, 15, 24, 63, 39], [8, 1, 0, 6, 5, 15, 0, 0, 0, 43, 5, 10, 19, 22, 90, 107], [27, 6, 31, 0, 11, 35, 9, 0, 7, 3, 13, 2, 0, 0, 12, 5, 5, 30, 5, 49, 85], [0, 52, 0, 11, 41, 22, 1, 9, 8, 12, 32, 6, 43, 0, 108, 2], [25, 12, 61, 30, 0, 9, 6, 25, 0, 1, 0, 26, 2, 15, 2, 22, 45, 83], [27, 14, 19, 0, 1, 56, 14, 0, 0, 0, 10, 0, 1, 0, 54, 5, 10, 20, 26, 41, 66], [1, 112, 35, 0, 19, 12, 22, 0, 0, 0, 47, 4, 10, 15, 14, 99], [31, 16, 39, 0, 0, 94, 9, 0, 16, 0, 11, 0, 1, 0, 20, 0, 0, 2, 14, 44, 99], [42, 9, 45, 0, 0, 48, 14, 0, 8, 1, 15, 0, 0, 0, 24, 3, 36, 7, 12, 42, 104], [88, 0, 3, 85, 13, 1, 3, 20, 5, 0, 0, 2, 28, 18, 8, 14, 10, 42, 89], [116, 66, 11, 0, 0, 67, 8, 0, 27, 0, 5, 1, 2, 0, 3, 1, 0, 1, 5, 58, 60], [25, 17, 125, 0, 9, 48, 27, 0, 4, 0, 23, 0, 0, 0, 62, 7, 4, 7, 20, 3, 80], [34, 8, 85, 0, 3, 31, 11, 0, 5, 6, 9, 0, 3, 4, 56, 17, 10, 2, 39, 83, 76], [8, 15, 73, 0, 4, 78, 53, 0, 17, 32, 4, 0, 1, 0, 53, 6, 44, 13, 5, 55, 32], [0, 38, 0, 7, 148, 37, 0, 9, 14, 8, 0, 0, 0, 22, 2, 2, 3, 22, 27, 163], [0, 11, 62, 0, 22, 90, 33, 0, 9, 9, 24, 1, 2, 6, 14, 16, 9, 39, 25, 69, 65], [15, 11, 60, 0, 8, 125, 34, 0, 26, 32, 4, 0, 0, 0, 1, 22, 42, 5, 34, 3, 92], [51, 0, 48, 0, 8, 62, 15, 0, 12, 13, 21, 0, 0, 0, 47, 6, 16, 10, 12, 95, 114], [43, 29, 39, 0, 13, 46, 18, 1, 7, 6, 31, 0, 1, 3, 9, 2, 24, 23, 19, 96, 134], [13, 14, 122, 0, 4, 132, 61, 0, 0, 1, 7, 0, 1, 1, 13, 15, 10, 13, 10, 88, 84], [19, 56, 80, 51, 214, 212], [12, 28, 69, 0, 22, 14, 28, 1, 18, 17, 31, 1, 3, 4, 52, 8, 11, 30, 23, 177, 101], [42, 12, 47, 0, 23, 133, 44, 0, 35, 9, 15, 0, 0, 2, 61, 23, 3, 28, 5, 49, 124], [32, 22, 78, 0, 9, 72, 7, 0, 29, 1, 9, 0, 0, 1, 102, 13, 29, 6, 57, 82, 121], [53, 44, 106, 0, 24, 375, 19, 1, 28, 36, 28, 6, 0, 5, 70, 26, 19, 48, 32, 0, 0], [6, 59, 114, 0, 0, 290, 48, 0, 16, 64, 67, 3, 0, 0, 9, 13, 8, 41, 32, 245, 152]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}