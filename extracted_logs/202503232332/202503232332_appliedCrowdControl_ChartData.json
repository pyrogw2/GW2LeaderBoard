{
  "title": "202503232332_appliedCrowdControl_ChartData",
  "created": "20250323233208000",
  "creator": "Drevarr",
  "tags": "ChartData",
  "type": "text/vnd.tiddlywiki",
  "text": "\r\nconst names = [\"Orion Of The Hunt\", \"Hephyt Wolf\", \"Ninja Tortoise\", \"O Divino\", \"B\\u00e4sk\\u00e9t\", \"Rainy Twilight\", \"Candygram Cupid\", \"Havocus Imperator\", \"Z Y A N\", \"Degothi Everilde\", \"Too Huge\", \"Tingelings\", \"Peewee Stability\", \"Iobtesr\", \"Niffuries\", \"Astro Bear\", \"Veil B\\u00f4t\", \"Smile Has Minion\", \"King Modus\", \"T A R Ancalim\\u00eb\", \"Illusionary Oinkies\", \"Havocus Imperator\", \"S T E P M O M\", \"Flawed Jin\", \"Paralda\", \"Neural Necro\", \"Zyn Wintergreen Six\", \"Muted Girl\", \"Onysc\", \"Time Turned Fragile\", \"Psyche V\", \"Persueas\", \"Uncle Donk\", \"Varda Grenths Hand\", \"Frozen Delirious\", \"Elgar The Necro\", \"Midosaki\"];\r\nconst professions = [\"Druid\", \"Druid\", \"Druid\", \"Warrior\", \"Holosmith\", \"Holosmith\", \"Untamed\", \"Dragonhunter\", \"Tempest\", \"Scrapper\", \"Dragonhunter\", \"Chronomancer\", \"Firebrand\", \"Chronomancer\", \"Firebrand\", \"Holosmith\", \"Chronomancer\", \"Scourge\", \"Firebrand\", \"Dragonhunter\", \"Chronomancer\", \"Firebrand\", \"Scourge\", \"Firebrand\", \"Firebrand\", \"Reaper\", \"Firebrand\", \"Chronomancer\", \"Spellbreaker\", \"Chronomancer\", \"Chronomancer\", \"Spellbreaker\", \"Dragonhunter\", \"Reaper\", \"Scourge\", \"Scourge\", \"Scourge\"];\r\nconst ProfessionColor = {\"Warrior\": \"#FF9933\", \"Berserker\": \"#FFA750\", \"Spellbreaker\": \"#FFB66D\", \"Bladesworn\": \"#FFC48A\", \"Guardian\": \"#3399cc\", \"Dragonhunter\": \"#50A7D3\", \"Firebrand\": \"#6DB6DA\", \"Willbender\": \"#8AC4E1\", \"Revenant\": \"#CC6342\", \"Herald\": \"#D3795D\", \"Renegade\": \"#DA8F78\", \"Vindicator\": \"#E1A593\", \"Engineer\": \"#996633\", \"Scrapper\": \"#A77B50\", \"Holosmith\": \"#B6916D\", \"Mechanist\": \"#C4A78A\", \"Ranger\": \"#66CC33\", \"Druid\": \"#7BD350\", \"Soulbeast\": \"#91DA6D\", \"Untamed\": \"#A7E18A\", \"Thief\": \"#CC6666\", \"Daredevil\": \"#D37B7B\", \"Deadeye\": \"#DA9191\", \"Specter\": \"#E1A7A7\", \"Elementalist\": \"#EC5752\", \"Tempest\": \"#EE6F6A\", \"Weaver\": \"#F18783\", \"Catalyst\": \"#F49F9C\", \"Mesmer\": \"#993399\", \"Chronomancer\": \"#A750A7\", \"Mirage\": \"#B66DB6\", \"Virtuoso\": \"#C48AC4\", \"Necromancer\": \"#339966\", \"Reaper\": \"#50A77B\", \"Scourge\": \"#6DB691\", \"Harbinger\": \"#8AC4A7\"};\r\nconst short_Prof = {\"Guardian\": \"Gdn\", \"Dragonhunter\": \"Dgh\",\t\"Firebrand\": \"Fbd\",\t\"Willbender\": \"Wbd\", \"Warrior\": \"War\", \"Berserker\": \"Brs\", \"Spellbreaker\": \"Spb\", \"Bladesworn\": \"Bds\", \"Engineer\": \"Eng\", \"Scrapper\": \"Scr\", \"Holosmith\": \"Hls\", \"Mechanist\": \"Mec\", \"Ranger\": \"Rgr\", \"Druid\": \"Dru\", \"Soulbeast\": \"Slb\", \"Untamed\": \"Unt\", \"Thief\": \"Thf\", \"Daredevil\": \"Dar\", \"Deadeye\": \"Ded\", \"Specter\": \"Spe\", \"Elementalist\": \"Ele\", \"Tempest\": \"Tmp\", \"Weaver\": \"Wea\", \"Catalyst\": \"Cat\", \"Mesmer\": \"Mes\", \"Chronomancer\": \"Chr\", \"Mirage\": \"Mir\", \"Virtuoso\": \"Vir\", \"Necromancer\": \"Nec\", \"Reaper\": \"Rea\", \"Scourge\": \"Scg\", \"Harbinger\": \"Har\", \"Revenant\": \"Rev\", \"Herald\": \"Her\", \"Renegade\": \"Ren\", \"Vindicator\": \"Vin\", \"Unknown\": \"Ukn\"};\r\noption = {\r\n  title: [\r\n    {text: 'Applied Hard CC per Fight for all Fights Present', left: 'center'},\r\n    {text: 'Output in seconds across all fights \\nupper: Q3 + 1.5 * IQR \\nlower: Q1 - 1.5 * IQR', borderColor: '#999', borderWidth: 1, textStyle: {fontSize: 10}, left: '1%', top: '90%'}\r\n  ],\r\ndataset: [\r\n    {\r\n      // prettier-ignore\r\n      source: \r\n[[0.0, 0.0, 0.0, 0.0, 27.44, 318.72, 85.8, 0.0, 46.86, 66.3, 0.0, 0.0, 0.0, 0.0, 0.0, 132.8, 0.0, 0.0, 0.0, 0.0, 0.0], [37.96, 0.0, 0.0, 0.0, 0.0, 796.8, 0.0, 0.0, 0.0, 22.1, 0.0, 0.0, 0.0, 21.28, 0.0, 0.0, 0.0, 123.6, 284.0, 0.0, 0.0], [0.0, 0.0, 124.74, 0.0, 27.44, 478.08, 0.0, 0.0, 0.0, 0.0, 308.16, 0.0, 54.39, 0.0, 68.4, 0.0, 27.6, 0.0, 142.0, 297.25, 0.0], [0.0, 124.74, 6.75, 54.88, 796.8, 0.0, 0.0, 23.43, 0.0, 0.0, 0.0, 0.0, 0.0, 68.4, 0.0, 0.0, 0.0, 0.0, 594.5, 816.0], [66.4, 0.0, 988.8, 284.0, 891.75, 1360.0], [0.0, 42.9, 0.0, 93.72, 0.0, 154.08, 0.0, 0.0, 0.0, 68.4, 66.4, 0.0, 370.8, 284.0, 0.0, 2448.0], [0.0, 0.0, 249.48, 0.0, 27.44, 796.8, 0.0, 0.0, 23.43, 44.2, 0.0, 0.0, 108.78, 21.28, 68.4, 0.0, 0.0, 247.2, 568.0, 594.5, 1088.0], [42.9, 0.0, 0.0, 22.1, 616.32, 0.0, 217.56, 0.0, 410.4, 0.0, 27.6, 494.4, 142.0, 1189.0, 1360.0], [265.6, 27.6, 370.8, 426.0, 2080.75, 4352.0], [0.0, 43.74, 249.48, 0.0, 0.0, 956.16, 0.0, 0.0, 0.0, 66.3, 0.0, 0.0, 54.39, 0.0, 68.4, 132.8, 0.0, 494.4, 994.0, 594.5, 544.0], [0.0, 2071.68, 0.0, 0.0, 93.72, 0.0, 616.32, 0.0, 54.39, 0.0, 68.4, 0.0, 55.2, 370.8, 710.0, 891.75, 0.0], [924.48, 0.0, 108.78, 63.84, 136.8, 66.4, 55.2, 247.2, 568.0, 1783.5, 2448.0], [0.0, 0.0, 199.2, 165.6, 618.0, 1420.0, 2378.0, 3264.0], [27.44, 2549.76, 85.8, 0.0, 0.0, 22.1, 1078.56, 0.0, 0.0, 63.84, 136.8, 0.0, 138.0, 247.2, 284.0, 891.75], [18.98, 21.87, 498.96, 6.75, 54.88, 1115.52, 171.6, 0.0, 70.29, 22.1, 154.08, 0.0, 0.0, 21.28, 68.4, 0.0, 0.0, 0.0, 710.0, 0.0, 2448.0], [0.0, 21.87, 62.37, 0.0, 137.2, 637.44, 0.0, 0.0, 70.29, 44.2, 308.16, 0.0, 163.17, 21.28, 0.0, 66.4, 0.0, 988.8, 568.0, 1783.5, 1360.0], [0.0, 0.0, 108.78, 0.0, 0.0, 0.0, 138.0, 494.4, 1136.0, 891.75, 6800.0], [94.9, 43.74, 0.0, 0.0, 137.2, 5736.96], [132.86, 109.35, 561.33, 0.0, 0.0, 4621.44, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 816.0], [75.92, 43.74, 2390.4, 85.8, 0.0, 70.29, 44.2, 1540.8, 0.0, 54.39, 42.56, 68.4, 66.4, 27.6, 618.0, 710.0, 1189.0, 1360.0], [5099.52, 171.6, 0.0, 117.15, 0.0, 770.4, 0.0, 0.0, 0.0, 342.0, 66.4, 110.4, 370.8, 568.0, 891.75, 2720.0], [0.0, 174.96, 1933.47, 0.0, 137.2, 7808.64], [0.0, 0.0, 686.07, 0.0, 301.84, 3665.28, 0.0, 0.0, 70.29, 110.5, 308.16, 0.0, 54.39, 21.28, 273.6, 0.0, 27.6, 1236.0, 568.0, 594.5, 4352.0], [151.84, 174.96, 1185.03, 85.8, 0.0, 93.72, 221.0, 1386.72, 0.0, 0.0, 106.4, 205.2, 332.0, 55.2, 370.8, 1278.0, 1486.25, 6256.0], [0.0, 0.0, 0.0, 0.0, 0.0, 3187.2, 171.6, 0.0, 140.58, 176.8, 1078.56, 41.42, 0.0, 85.12, 342.0, 332.0, 165.6, 370.8, 1278.0, 2378.0, 8704.0], [94.9, 87.48, 748.44, 0.0, 137.2, 956.16, 214.5, 0.0, 187.44, 176.8, 770.4, 0.0, 163.17, 106.4, 342.0, 199.2, 82.8, 1359.6, 1420.0, 1486.25, 4352.0], [0.0, 0.0, 164.01, 221.0, 3081.6, 41.42, 761.46, 191.52, 342.0, 199.2, 82.8, 741.6, 2414.0, 1486.25, 5440.0], [189.8, 109.35, 436.59, 0.0, 82.32, 3187.2, 85.8, 0.0, 187.44, 265.2, 2003.04, 0.0, 217.56, 42.56, 205.2, 464.8, 55.2, 741.6, 1846.0, 2080.75, 3808.0], [0.0, 174.96, 1683.99, 0.0, 246.96, 8446.08, 128.7, 0.0, 117.15, 198.9, 924.48, 0.0, 163.17, 85.12, 136.8, 132.8, 165.6, 123.6, 284.0, 0.0, 0.0], [18.98, 21.87, 1496.88, 0.0, 137.2, 8286.72, 386.1, 0.0, 70.29, 176.8, 1232.64, 0.0, 217.56, 63.84, 0.0, 132.8, 27.6, 247.2, 568.0, 1486.25, 2720.0], [935.55, 0.0, 0.0, 5577.6, 300.3, 0.0, 93.72, 309.4, 1694.88, 0.0, 217.56, 63.84, 68.4, 199.2, 138.0, 1483.2, 710.0, 4756.0, 2992.0], [0.0, 0.0, 1122.66, 0.0, 0.0, 7171.2, 214.5, 0.0, 164.01, 154.7, 1694.88, 0.0, 0.0, 0.0, 0.0, 265.6, 220.8, 1359.6, 2698.0, 4458.75, 3536.0], [0.0, 21.87, 1247.4, 6.75, 192.08, 7968.0, 85.8, 0.0, 23.43, 88.4, 1694.88, 41.42, 54.39, 0.0, 684.0, 332.0, 138.0, 988.8, 568.0, 2675.25, 7616.0], [189.8, 43.74, 561.33, 0.0, 219.52, 7011.84, 214.5, 5.94, 140.58, 176.8, 1232.64, 0.0, 163.17, 21.28, 0.0, 66.4, 55.2, 1483.2, 568.0, 6836.75, 6528.0], [170.82, 131.22, 1185.03, 0.0, 219.52, 4621.44, 42.9, 0.0, 210.87, 265.2, 616.32, 0.0, 0.0, 63.84, 410.4, 464.8, 82.8, 1236.0, 1704.0, 3269.75, 8704.0], [132.86, 196.83, 1683.99, 0.0, 356.72, 9402.24, 214.5, 0.0, 117.15, 66.3, 1694.88, 0.0, 0.0, 63.84, 478.8, 464.8, 82.8, 1112.4, 994.0, 3567.0, 4896.0], [341.64, 174.96, 1995.84, 0.0, 384.16, 9402.24, 214.5, 0.0, 0.0, 0.0, 1232.64, 0.0, 217.56, 21.28, 342.0, 398.4, 220.8, 1359.6, 1846.0, 3269.75, 7072.0]]\r\n    },\r\n\t{\r\n\t  transform: {\r\n\t\ttype: 'boxplot',\r\n\t\tconfig: {\r\n\t\t  itemNameFormatter: function (params) {\r\n\t\t\treturn names[params.value]+\" (\"+short_Prof[professions[params.value]]+\")\";\r\n\t\t  }\r\n\t\t}\r\n\t  },\r\n\t},\r\n\t{\r\n\t  fromDatasetIndex: 1,\r\n\t  fromTransformResult: 1\r\n\t}\r\n  ],\r\n  dataZoom: [{type: 'slider', show: true, yAxisIndex: [0], start: 100, end: 50 },{type: 'inside', yAxisIndex: [0], start: 100, end: 50 },],\r\n  tooltip: {trigger: 'item'},\r\n  grid: {left: '25%', right: '10%', bottom: '15%'},\r\n  yAxis: {type: 'category', boundaryGap: true, nameGap: 30, splitArea: {show: true}, splitLine: {show: true}},\r\n  xAxis: {type: 'value', name: 'Sec', splitArea: {show: true}},\r\n  series: [\r\n\t{\r\n\t  name: 'boxplot',\r\n\t  type: 'boxplot',\r\n\t  datasetIndex: 1,\r\n\t  tooltip: {trigger: 'item',\r\n\t\t  formatter: function (params) {\r\n\t\t\t//console.log(params.value);\r\n\t\t  return `<u><b>${params.value[0]}</b></u>\r\n\t<table>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Low   :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[1].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q1    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[2].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q2    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[3].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">Q3    :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[4].toFixed(2)}</b></td>\r\n\t  </tr>\r\n\t  <tr>\r\n\t\t  <td align=\"right\">&#x2022;</td>\r\n\t\t<td align=\"left\">High  :</td>\r\n\t\t<td style=\"color:blue;\"align=\"right\"><b>${params.value[5].toFixed(2)}</b></td>\r\n\t  </tr>  \r\n\t</table>`;              \r\n\t\t},    \r\n\t\taxisPointer: {type: 'shadow'}},      \r\n\t  itemStyle: {\r\n\t\tborderColor: function (seriesIndex) {\r\n\t\t  let myIndex = names.indexOf(seriesIndex.name.split(\" (\")[0]);\r\n\t\t  return ProfessionColor[professions[myIndex]];\r\n\t\t\t\t},\r\n\t\tborderWidth: 2\r\n\t  },\r\n\t  encode:{tooltip: [ 1, 2, 3, 4, 5]},\r\n\t  },\r\n\t{\r\n\t  name: 'outlier',\r\n\t  type: 'scatter',\r\n\t  encode: { x: 1, y: 0 },\r\n\t  datasetIndex: 2,\r\n\t}\r\n  ]\r\n};\n\n"
}